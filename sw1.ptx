//
// Generated by LLVM NVPTX Back-End
//

.version 7.4
.target sm_87
.address_size 64

	// .globl	_Z4hiiiv                // -- Begin function _Z4hiiiv
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.global .align 1 .b8 _$_str[5] = {100, 99, 100, 10, 0};
.global .align 1 .b8 threadIdx[1];
.global .align 1 .b8 _$_str1[8] = {115, 115, 115, 115, 115, 115, 10, 0};
                                        // @_Z4hiiiv
.visible .func _Z4hiiiv()
{
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<4>;

// %bb.0:
	mov.u64 	%rd1, _$_str;
	cvta.global.u64 	%rd2, %rd1;
	mov.u64 	%rd3, 0;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd3;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r1, [retval0+0];
	} // callseq 0
	ret;
                                        // -- End function
}
	// .globl	_Z4axpyfPfS_            // -- Begin function _Z4axpyfPfS_
.visible .entry _Z4axpyfPfS_(
	.param .f32 _Z4axpyfPfS__param_0,
	.param .u64 _Z4axpyfPfS__param_1,
	.param .u64 _Z4axpyfPfS__param_2
)                                       // @_Z4axpyfPfS_
{
	.local .align 8 .b8 	__local_depot1[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .b32 	%r<4>;
	.reg .f32 	%f<5>;
	.reg .b64 	%rd<15>;

// %bb.0:
	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [_Z4axpyfPfS__param_2];
	ld.param.u64 	%rd1, [_Z4axpyfPfS__param_1];
	ld.param.f32 	%f1, [_Z4axpyfPfS__param_0];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.global.u64 	%rd4, %rd3;
	cvta.to.global.u64 	%rd5, %rd1;
	cvta.global.u64 	%rd6, %rd5;
	st.f32 	[%SP+0], %f1;
	st.u64 	[%SP+8], %rd6;
	st.u64 	[%SP+16], %rd4;
	ld.f32 	%f2, [%SP+0];
	ld.u64 	%rd7, [%SP+8];
	mov.u32 	%r1, %tid.x;
	mul.wide.u32 	%rd8, %r1, 4;
	add.s64 	%rd9, %rd7, %rd8;
	ld.f32 	%f3, [%rd9];
	mul.rn.f32 	%f4, %f2, %f3;
	ld.u64 	%rd10, [%SP+16];
	add.s64 	%rd11, %rd10, %rd8;
	st.f32 	[%rd11], %f4;
	mov.u64 	%rd12, _$_str1;
	cvta.global.u64 	%rd13, %rd12;
	mov.u64 	%rd14, 0;
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd13;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd14;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r2, [retval0+0];
	} // callseq 1
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	call.uni 
	_Z4hiiiv, 
	(
	);
	} // callseq 2
	ret;
                                        // -- End function
}
